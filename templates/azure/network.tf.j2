# Subnet that will be created:
{% for vnet in azure_vnets %}
{% for subnet in vnet.subnets %}
# {{ subnet.name }} {% for prefix in subnet.prefixes %}"{{ prefix }}"{%- if not loop.last -%}, {%- endif -%}{% endfor %} ({{ vnet.name }})
{% endfor %}
{% endfor %}

{% for vnet in azure_vnets %}
# Virtual network {{ vnet.name }} creation block
resource "azurerm_virtual_network" "{{ vnet.name }}" {
  name                = "{{ vnet.name }}"
  address_space       = ["{{ vnet.addr_space }}"]
  location            = azurerm_resource_group.{{ azure_resource_group_name }}.location
  resource_group_name = azurerm_resource_group.{{ azure_resource_group_name }}.name
}

# Subnet creation block(s)
{% for subnet in vnet.subnets %}
resource "azurerm_subnet" "{{ subnet.name }}" {
  name                 = "{{ subnet.name }}"
  resource_group_name  = azurerm_resource_group.{{ azure_resource_group_name }}.name
  virtual_network_name = azurerm_virtual_network.{{ vnet.name }}.name
  address_prefixes     = [{% for prefix in subnet.prefixes %}"{{ prefix }}"{%- if not loop.last -%}, {%- endif -%}{% endfor %}]
{% if subnet.endpoints is defined %}
  service_endpoints    = [{% for endpoint in subnet.endpoints %}"{{ endpoint }}"{% if not loop.last %},{% endif %}{% endfor %}]
{% endif %}
{% if subnet.enforce_private_link_endpoint_network_policies is defined %}
  enforce_private_link_endpoint_network_policies = {{ subnet.enforce_private_link_endpoint_network_policies }}
{% endif %}
}
{% endfor -%}

{% if vnet.peer_with is defined %}
{% for peer in vnet.peer_with %}
# Peering with {{ peer }}
resource "azurerm_virtual_network_peering" "{{ vnet.name }}-{{ peer }}" {
  name                      = "{{ vnet.name }}-{{ peer }}"
  resource_group_name       = azurerm_resource_group.{{ azure_resource_group_name }}.name
  virtual_network_name      = azurerm_virtual_network.{{ vnet.name }}.name
  remote_virtual_network_id = azurerm_virtual_network.{{ peer }}.id
}

{% endfor %}
{% endif %}
{% endfor -%}

{% if azure_public_ips|length > 0 %}
# Public IPs creation block
{% for ipname in azure_public_ips %}
{% set allocation_method = ipname.type|default ('Static') %}
# {{ ipname.name }} Public IP
resource "azurerm_public_ip" "publicip_{{ ipname.name }}" {
  name                = "publicip_{{ ipname.name }}"
  resource_group_name = azurerm_resource_group.{{ azure_resource_group_name }}.name
  location            = azurerm_resource_group.{{ azure_resource_group_name }}.location
  allocation_method   = "{{ allocation_method }}"
}
{% if allocation_method == 'Dynamic' %}
data "azurerm_public_ip" "publicip_{{ ipname.name }}" {
  name                = azurerm_public_ip.publicip_{{ ipname.name }}.name
  resource_group_name = azurerm_resource_group.{{ azure_resource_group_name }}.name
}
output "{{ ipname.name }}_public_ip_address" {
  value = data.azurerm_public_ip.publicip_{{ ipname.name }}.ip_address
}
{% else %}
output "{{ ipname.name }}_public_ip_address" {
  value = azurerm_public_ip.publicip_{{ ipname.name }}.ip_address
}
{% endif %}

{% endfor %}
{% endif %}
