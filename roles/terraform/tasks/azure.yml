---

- block:
    - name: Purge azure-init output directory
      file:
        path: "{{ terraform_config_dir }}/azure-init"
        state: absent
      when:
        - terraform_purge | bool

    - name: Create azure-init output directory
      file:
        path: "{{ terraform_config_dir }}/azure-init"
        state: directory

    - name: Deploy resources templates
      template:
        src: "azure/{{ item }}.tf.j2"
        dest: "{{ terraform_config_dir }}/azure-init/{{ item }}.tf"
      with_items:
        - "{{ azure_tfstate_resources }}"
      vars:
        skip_azure_backend: true
        azure_resource_group_name: "{{ azure_tfstate_resource_group_name }}"
        azure_storage_account_name: "{{ terraform_tfstate_on_azure_storage_container }}"
        azure_storage_container_name: "{{ terraform_tfstate_on_azure_storage_container }}"
  when:
    - terraform_tfstate_on_azure_storage_container is defined

- name: Purge azure output directory
  file:
    path: "{{ terraform_config_dir }}/azure"
    state: absent
  when:
    - terraform_purge | bool

- name: Create Azure output directory
  file:
    path: "{{ terraform_config_dir }}/azure"
    state: directory

- name: Deploy Azure general resources templates
  template:
    src: "azure/{{ item }}.tf.j2"
    dest: "{{ terraform_config_dir }}/azure/{{ item }}.tf"
  with_items:
    - "{{ azure_resources }}"

- name: Deploy Azure VPN resources templates
  template:
    src: "azure/{{ item }}.tf.j2"
    dest: "{{ terraform_config_dir }}/azure/{{ item }}.tf"
  with_items:
    - "{{ azure_vpn_resources }}"
  when:
    - azure_localnetworkgws is defined

- block:
    - name: Create Azure ssh key directory
      file:
        path: "{{ terraform_config_dir }}/azure-keys"
        state: directory

    - name: Generate ssh RSA public/private key
      command:
        cmd: ssh-keygen -t rsa -N '' -f azure_id_rsa
        chdir: "{{ terraform_config_dir }}/azure-keys"
        creates: azure_id_rsa.pub
  when:
    - azure_vm_admin_ssh_public_key_file == terraform_config_dir + '/azure-keys/azure_id_rsa.pub'
    - not azure_vm_disable_password_authentication

- name: Deploy Azure machine specific templates
  template:
    src: azure/template.tf.j2
    dest: "{{ terraform_config_dir }}/azure/{{ group.key }}.tf"
  with_dict:
    - "{{ groups }}"
  loop_control:
    loop_var: group
  when:
    - group.key not in ('all', 'ungrouped')
