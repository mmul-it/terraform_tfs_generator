# Virtual machine creation blocks for group {{ group_name }}
{% for vm in groups[group_name] %}
{% set vm_basename = vm.split('.')[0] %}

# {{ vm }} - VM size {{ hostvars[vm].vm_size }}
resource "azurerm_linux_virtual_machine" "{{ vm_basename }}" {
  name                         = "{{ vm_basename }}"
  size                         = "{{ hostvars[vm].vm_size }}"
  resource_group_name          = azurerm_resource_group.{{ azure_resource_group_name }}.name
  location                     = azurerm_resource_group.{{ azure_resource_group_name }}.location
  encryption_at_host_enabled   = false
{% if hostvars[vm].osdisk_encrypt is defined and hostvars[vm].osdisk_encrypt | bool and azure_key_vault_enable | bool %}
  depends_on                   = [azurerm_key_vault_access_policy.osdisk_{{ vm_basename }}]
{% endif %}
  network_interface_ids        = [{% for address in hostvars[vm].addresses %}azurerm_network_interface.vm_nic{{ loop.index }}_{{ vm_basename }}.id{% if not loop.last %},{% endif %}{% endfor %}]

  os_disk {
    name                   = "osdisk_{{ vm_basename }}"
    caching                = "ReadWrite"
    storage_account_type   = "Standard_LRS"
    disk_size_gb           = "{{ hostvars[vm].osdisk_size }}"
{% if hostvars[vm].osdisk_encrypt is defined and hostvars[vm].osdisk_encrypt | bool and azure_key_vault_enable | bool %}
{% if hostvars[vm].azure_renamed_id is defined and hostvars[vm].azure_renamed_id | bool %}
    disk_encryption_set_id = replace(azurerm_disk_encryption_set.osdisk_{{ vm_basename }}_encrypted.id, "{{ azure_resource_group_name }}", "{{ azure_resource_group_name|upper }}") 
{% else %}
    disk_encryption_set_id = azurerm_disk_encryption_set.osdisk_{{ vm_basename }}_encrypted.id
{% endif %}
{% endif %}
  }

  source_image_reference {
    publisher = "{{ azure_vm_image.publisher }}"
    offer     = "{{ azure_vm_image.offer }}"
    sku       = "{{ azure_vm_image.sku }}"
    version   = "{{ azure_vm_image.version }}"
  }

  boot_diagnostics {
    storage_account_uri = azurerm_storage_account.{{ azure_storage_account_name }}.primary_blob_endpoint
  }

  computer_name  = "{{ vm_basename }}"
  admin_username = "{{ azure_vm_admin_username }}"
  disable_password_authentication = {{ azure_vm_disable_password_authentication | lower }}
{% if not azure_vm_disable_password_authentication | bool %}
  admin_password = "{{ azure_vm_admin_password }}"
{% endif %}

{% if azure_vm_admin_ssh_public_key_file != '' %}
  admin_ssh_key {
      username       = "{{ azure_vm_admin_username }}"
      public_key     = file("{{ azure_vm_admin_ssh_public_key_file }}")
  }
{% endif %}

{% if hostvars[vm].azure_tags is defined %}
  tags = {
{% for key,value in hostvars[vm].azure_tags.items() %}
    {{ key }} = "{{ value }}"
{% endfor %}
  }
{% endif %}
}
{% endfor %}
