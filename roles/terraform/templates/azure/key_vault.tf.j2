data "azurerm_client_config" "current" {}

resource "azurerm_key_vault" "{{ azure_key_vault_name }}" {
  name                            = "{{ azure_key_vault_name }}"
  location                        = azurerm_resource_group.{{ azure_resource_group_name }}.location
  resource_group_name             = azurerm_resource_group.{{ azure_resource_group_name }}.name
  tenant_id                       = data.azurerm_client_config.current.tenant_id
  soft_delete_enabled             = true
  purge_protection_enabled        = true
  sku_name                        = "premium"
  enabled_for_deployment          = true
  enabled_for_disk_encryption     = true
  enabled_for_template_deployment = true
}

# Policy to authorize terraform
resource "azurerm_key_vault_access_policy" "{{ azure_key_vault_name }}-terraform" {
  key_vault_id = azurerm_key_vault.{{ azure_key_vault_name }}.id

  tenant_id = data.azurerm_client_config.current.tenant_id
  object_id = data.azurerm_client_config.current.object_id

  key_permissions = [
    "create",
    "get",
    "delete",
    "list",
    "wrapkey",
    "unwrapkey",
  ]

  secret_permissions = [
    "get",
    "delete",
    "set",
  ]
}

resource "azurerm_key_vault_key" "{{ azure_key_vault_keyname }}" {
  name         = "{{ azure_key_vault_keyname }}"
  key_vault_id = azurerm_key_vault.{{ azure_key_vault_name }}.id
  key_type     = "RSA"
  key_size     = 2048

  key_opts = [
    "decrypt",
    "encrypt",
    "sign",
    "unwrapKey",
    "verify",
    "wrapKey",
  ]
}
